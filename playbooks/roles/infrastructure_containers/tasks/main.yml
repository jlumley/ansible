# Creating the following Containers:
# - unifi-controller
# - nginx
# - dashmachine
# - mosquitto
# - home-assistant
# - frigate
# - budgetzero

- name: Create config dirs
  file:
    owner: "{{ item.path_owner }}"
    group: "{{ item.path_group }}"
    state: "directory"
    path: "/srv/config/{{item.path}}"
  loop:
    - path_owner: "2010"
      path_group: "2010"
      path: "unifi"
    - path_owner: "2006"
      path_group: "2006"
      path: "nginx/conf"
    - path_owner: "1883"
      path_group: "1883"
      path: "mosquitto"
    - path_owner: "2022"
      path_group: "2022"
      path: "frigate"
    - path_owner: "2009"
      path_group: "2009"
      path: "home-assistant"
    - path_owner: "1000"
      path_group: "1000"
      path: "dashboard"
    - path_owner: "1000"
      path_group: "1000"
      path: "hyperion"
    - path_owner: "2023"
      path_group: "2023"
      path: "esphome"
    - path_owner: "1000"
      path_group: "1000"
      path: "zigbee2mqtt"

- name: Deploy Unifi Controller
  docker_container:
    name: unifi-controller
    image: ghcr.io/linuxserver/unifi-controller
    pull: "{{ update_containers }}"
    restart_policy: "always"
    dns_servers:
      - "{{ dns_server }}"
    env:
      PUID: "2010"
      PGID: "2010"
    mounts:
      - source: "/srv/config/unifi"
        target: "/config"
        type: bind
    published_ports:
      - 3478:3478/udp
      - 10001:10001/udp
      - 1900:1900/udp
      - 6789:6789
      - 5514:5514
      - 8080:8080
      - 8443:8443

- name: Create Nginx cloudflare password file
  template:
    src: "cloudflare_credentials.j2" 
    dest: "/secrets/cloudflare.ini"

- name: Deploy Niginx
  docker_container:
    name: nginx
    image: ghcr.io/linuxserver/swag
    pull: "{{ update_containers }}"
    restart_policy: "always"
    dns_servers:
      - "{{ dns_server }}"
    env:
      PUID: "2006"
      PGID: "2007"
      URL: local.jlumley.com
      SUBDOMAINS: wildcard
      VALIDATION: dns
      DNSPLUGIN: cloudflare
    mounts:
      - source: "/srv/config/nginx/conf"
        target: "/config"
        type: bind
      - source: "/secrets/cloudflare.ini"
        target: "/config/dns-conf/cloudflare.ini"
        read_only: yes
        type: bind
    network_mode: host

- name: Deploy Mosquitto MQTT
  docker_container:
    name: mosquitto-mqtt
    image: eclipse-mosquitto
    pull: "{{ update_containers }}"
    restart_policy: "always"
    network_mode: host
    dns_servers:
      - "{{ dns_server }}"
    env:
      PUID: "1883"
      PGID: "1883"
    mounts:
      - source: "/srv/config/mosquitto"
        target: "/mosquitto"
        type: bind

- name: Create Frigate config
  template:
    src: "frigate_conf.j2" 
    dest: "/srv/config/frigate/config/config.yml"

- name: Deploy Frigate
  docker_container:
    name: frigate
    image: blakeblackshear/frigate:stable-amd64
    pull: "{{ update_containers }}"
    restart_policy: "always"
    network_mode: host
    privileged: true
    dns_servers:
      - "{{ dns_server }}"
    env:
      TZ: "America/Toronto"
      FRIGATE_RTSP_PASSWORD: "this-is-the-way"
      PUID: "2022"
      PGID: "2022"
    mounts:
      - source: "/etc/localtime"
        target: "/etc/localtime"
        read_only: yes
        type: bind
      - source: "/srv/config/frigate/config"
        target: "/config"
        type: bind
      - source: "/data/frigate"
        target: "/media/frigate"
        type: bind
      - target: /tmp/cache
        type: tmpfs
        tmpfs_size: 1G

- name: Deploy Home Assistant
  docker_container:
    name: home-assistant
    image: ghcr.io/linuxserver/homeassistant
    pull: "{{ update_containers }}"
    restart_policy: "always"
    network_mode: host
    dns_servers:
      - "{{dns_server}}"
    env:
      TZ: "America/Toronto"
      PUID: "2009"
      PGID: "2009"
    mounts:
      - source: "/srv/config/home-assistant"
        target: "/config"
        type: bind

- name: Deploy Dash Machine
  docker_container:
    name: dashboard
    image: rmountjoy/dashmachine
    pull: "{{update_containers}}"
    restart_policy: "always"
    dns_servers:
      - "{{dns_server}}"
    mounts:
      - source: "/srv/config/dashboard"
        target: "/dashmachine/dashmachine/user_data"
        type: bind
    published_ports:
      - 5005:5000

- name: Deploy Hyperion
  docker_container:
    name: hyperion
    image: sirfragalot/hyperion.ng:latest
    pull: "{{update_containers}}"
    restart_policy: "always"
    dns_servers:
      - "{{dns_server}}"
    mounts:
      - source: "/srv/config/hyperion"
        target: "/root/.hyperion:rw"
        type: bind
    published_ports:
      - 19445:19445
      - 19444:19444
      - 8090:8090

- name: Deploy Esphome
  docker_container:
    name: esphome
    image: esphome/esphome
    pull: "{{update_containers}}"
    restart_policy: "always"
    dns_servers:
      - "{{dns_server}}"
    network_mode: host
    mounts:
      - source: "/srv/config/esphome"
        target: "/config"
        type: bind
      - source: "/etc/localtime"
        target: "/ettc/localtime"
        type: bind
        read_only: yes  
  

#- name: Create Zigbee2mqtt config
#  template:
#    src: "zigbee2mqtt_conf.j2" 
#    dest: "/srv/config/zigbee2mqtt/configuration.yaml"

- name: Deploy Zigbee2MQTT
  docker_container:
    name: zigbee2mqtt
    image: koenkk/zigbee2mqtt
    pull: "{{update_containers}}"
    restart_policy: "always"
    dns_servers:
      - "{{dns_server}}"
    mounts:
      - source: "/srv/config/zigbee2mqtt"
        target: "/app/data"
        type: bind 
      - source: "/run/udev"
        target: "/run/udev"
        type: bind
        read_only: yes
    network_mode: host
    env:
      TZ: "America/Toronto"
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0


- name: Deploy Logseq
  docker_container:
    name: logseq
    image: ghcr.io/logseq/logseq-webapp:latest
    pull: "{{update_containers}}"
    restart_policy: "always"
    dns_servers:
      - "{{dns_server}}"
    published_ports: 
      - 3001:80
    env:
      TZ: "America/Toronto"


